function [E, R, t, s] = five_point_algorithm( pts1, pts2, K1, K2 )
%FIVE_POINT_ALGORITHM Given the calibration matrix of both cameras and a
%mathing group of points estimate the relative pose between both cameras.
%
% pts1, pts2 - assumed to have dimension 2x5 and to be have equal size. 
% K1, K2 - Calibration matrix of both cameras
%


if size(pts1, 2) ~= 5 || size(pts2, 2) ~= 5
    error('five_point_algorithm:wrong_dimensions','pts1 and pts2 must be of size 2x5');
end

N = 5;
q1 = K1 \ [pts1; ones(1,N)];
q2 = K2 \ [pts2; ones(1,N)];

q = [q1(1,:)'.* q2(1,:)', q1(2,:)'.* q2(1,:)', q1(3,:)'.* q2(1,:)', ...
     q1(1,:)'.* q2(2,:)', q1(2,:)'.* q2(2,:)', q1(3,:)'.* q2(2,:)', ...
     q1(1,:)'.* q2(3,:)', q1(2,:)'.* q2(3,:)', q1(3,:)'.* q2(3,:)'];
 
%according to the author, the null space step can be further optimized, 
%following the efficiency considerations in section 3.2.1
% Can be further expand it to N > 5 by extracting the four singular vectors
% corresponding to the four smallest singular values.
nullSpace = null(q); 
X = nullSpace(:,1);
Y = nullSpace(:,2);
Z = nullSpace(:,3);
W = nullSpace(:,4);

% populating the equation system
mask = [1,2,3;4,5,6;7,8,9];
Xmat = X(mask);
Ymat = Y(mask);
Zmat = Z(mask);
Wmat = W(mask);
X_ = (K2') \ Xmat / K1;
Y_ = (K2') \ Ymat / K1;
Z_ = (K2') \ Zmat / K1;
W_ = (K2') \ Wmat / K1;

%det(F)
detF = p2p1(p1p1([X_(1,2),Y_(1,2),Z_(1,2),W_(1,2)], ...
                 [X_(2,3),Y_(2,3),Z_(2,3),W_(2,3)]) ...
          - p1p1([X_(1,3),Y_(1,3),Z_(1,3),W_(1,3)], ...
                 [X_(2,2),Y_(2,2),Z_(2,2),W_(2,2)]),...
                 [X_(3,1),Y_(3,1),Z_(3,1),W_(3,1)]) + ...
       p2p1(p1p1([X_(1,3),Y_(1,3),Z_(1,3),W_(1,3)], ...
                 [X_(2,1),Y_(2,1),Z_(2,1),W_(2,1)]) ...
          - p1p1([X_(1,1),Y_(1,1),Z_(1,1),W_(1,1)], ...
                 [X_(2,3),Y_(2,3),Z_(2,3),W_(2,3)]),...
                 [X_(3,2),Y_(3,2),Z_(3,2),W_(3,2)]) + ...
       p2p1(p1p1([X_(1,1),Y_(1,1),Z_(1,1),W_(1,1)], ...
                 [X_(2,2),Y_(2,2),Z_(2,2),W_(2,2)]) ...
          - p1p1([X_(1,2),Y_(1,2),Z_(1,2),W_(1,2)], ...
                 [X_(2,1),Y_(2,1),Z_(2,1),W_(2,1)]),...
                 [X_(3,3),Y_(3,3),Z_(3,3),W_(3,3)]);
             
%Flipped V
EE_t11 = p1p1([Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)], ...
              [Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)]) + ...
         p1p1([Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)], ...
              [Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)]) + ...
         p1p1([Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)], ...
              [Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)]);
EE_t12 = p1p1([Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)], ...
              [Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)]) + ...
         p1p1([Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)], ...
              [Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)]) + ...
         p1p1([Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)], ...
              [Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)]);
EE_t13 = p1p1([Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)], ...
              [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]) + ...
         p1p1([Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)], ...
              [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]) + ...
         p1p1([Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)], ...
              [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
EE_t22 = p1p1([Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)], ...
              [Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)]) + ...
         p1p1([Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)], ...
              [Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)]) + ...
         p1p1([Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)], ...
              [Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)]);
EE_t23 = p1p1([Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)], ...
              [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]) + ...
         p1p1([Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)], ...
              [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]) + ...
         p1p1([Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)], ...
              [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
EE_t33 = p1p1([Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)], ...
              [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]) + ...
         p1p1([Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)], ...
              [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]) + ...
         p1p1([Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)], ...
              [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
% Not used
% EE_t21 = EE_t12;
% EE_t31 = EE_t13;
% EE_t32 = EE_t23;

A_11 = EE_t11 - 0.5*(EE_t11 + EE_t22 + EE_t33);
A_12 = EE_t12;
A_13 = EE_t13;
A_21 = A_12;
A_22 = EE_t22 - 0.5*(EE_t11 + EE_t22 + EE_t33);
A_23 = EE_t23;
A_31 = A_13;
A_32 = A_23;
A_33 = EE_t33 - 0.5*(EE_t11 + EE_t22 + EE_t33);

AE_11 = p2p1(A_11, [Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)]) + ...
        p2p1(A_12, [Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)]) + ...
        p2p1(A_13, [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]);
AE_12 = p2p1(A_11, [Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)]) + ...
        p2p1(A_12, [Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)]) + ...
        p2p1(A_13, [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]);
AE_13 = p2p1(A_11, [Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)]) + ...
        p2p1(A_12, [Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)]) + ...
        p2p1(A_13, [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
AE_21 = p2p1(A_21, [Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)]) + ...
        p2p1(A_22, [Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)]) + ...
        p2p1(A_23, [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]);
AE_22 = p2p1(A_21, [Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)]) + ...
        p2p1(A_22, [Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)]) + ...
        p2p1(A_23, [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]);
AE_23 = p2p1(A_21, [Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)]) + ...
        p2p1(A_22, [Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)]) + ...
        p2p1(A_23, [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
AE_31 = p2p1(A_31, [Xmat(1,1),Ymat(1,1),Zmat(1,1),Wmat(1,1)]) + ...
        p2p1(A_32, [Xmat(2,1),Ymat(2,1),Zmat(2,1),Wmat(2,1)]) + ...
        p2p1(A_33, [Xmat(3,1),Ymat(3,1),Zmat(3,1),Wmat(3,1)]);
AE_32 = p2p1(A_31, [Xmat(1,2),Ymat(1,2),Zmat(1,2),Wmat(1,2)]) + ...
        p2p1(A_32, [Xmat(2,2),Ymat(2,2),Zmat(2,2),Wmat(2,2)]) + ...
        p2p1(A_33, [Xmat(3,2),Ymat(3,2),Zmat(3,2),Wmat(3,2)]);
AE_33 = p2p1(A_31, [Xmat(1,3),Ymat(1,3),Zmat(1,3),Wmat(1,3)]) + ...
        p2p1(A_32, [Xmat(2,3),Ymat(2,3),Zmat(2,3),Wmat(2,3)]) + ...
        p2p1(A_33, [Xmat(3,3),Ymat(3,3),Zmat(3,3),Wmat(3,3)]);
    
% Group and permute the collumns of our polynomial vectors to prepare for
% the Gaussian Jordan elimination with partial pivoting
% Previously our 3rd order polynomial vector arrangement was like this 
% x^3 | y^3 | z^3 | x^2y | xy^2 | x^2z | xz^2 | y^2z | yz^2 | xyz
% x^2 | y^2 | z^2 | xy | xz | yz | x | y | z | 1
% and now we are going to need this
% x^3 | y^3 | x^2y | xy^2 | x^2z | x^2 | y^2z | y^2 | xyz | xy
% xz^2 | xz | x | yz^2 | yz | y | z^3 | z^2 | z | 1

A = [detF; AE_11; AE_12; AE_13; AE_21; AE_22; AE_23; AE_31; AE_32; AE_33];
A = A(:,[1,2,4,5,6,11,8,12,10,14,7,15,17,9,16,18,3,13,19,20]);

% Gauss Jordan elimination (partial pivoting after)
A_el = gj_elim_pp(A);

% Subtraction and forming matrix B
k_row = partial_subtrc(A_el(5,11:20), A_el(6,11:20));
l_row = partial_subtrc(A_el(7,11:20), A_el(8,11:20));
m_row = partial_subtrc(A_el(9,11:20), A_el(10,11:20));

B_11 = k_row(1,1:4);
B_12 = k_row(1,5:8);
B_13 = k_row(1,9:13);
B_21 = l_row(1,1:4);
B_22 = l_row(1,5:8);
B_23 = l_row(1,9:13);
B_31 = m_row(1,1:4);
B_32 = m_row(1,5:8);
B_33 = m_row(1,9:13);

p_1 = pz4pz3(B_23, B_12) - pz4pz3(B_13, B_22);
p_2 = pz4pz3(B_13, B_21) - pz4pz3(B_23, B_11);
p_3 = pz3pz3(B_11, B_22) - pz3pz3(B_12, B_21);

n_row = pz7pz3(p_1, B_31) + pz7pz3(p_2, B_32) + pz6pz4(p_3, B_33);

%Extracting roots from n_row using companion matrix eigen values
n_row_scaled = n_row/n_row(1);

e_val = eig([-n_row_scaled(2:end);
            eye(9), zeros(9,1)]);
        
%Select the first real root
%TODO: Find if there's a "best" solution 
for n = 1:10
    if ~isreal(e_val(n))
        continue
    end
    
    z = e_val(n);
    break
end

%Backsubstition
p_z6 = [z^6; z^5; z^4; z^3; z^2; z; 1];
p_z7 = [z^7; p_z6];

x = (p_1*p_z7)/(p_3*p_z6);
y = (p_2*p_z7)/(p_3*p_z6);

E = x*Xmat + y*Ymat + z*Zmat + Wmat;
[U,S,V] = svd(E);

%check determinan signs
if(det(U) < 0)
    U(:,3) = -U(:,3);
end

if (det(V) < 0)
    V(:,3) = -V(:,3);
end


E = U*diag([1 1 0])*V';            

if nargout < 2
    return
end

%Extracting R and t from E 
D = [0  1   0;
     -1 0   0;
     0  0   1];
 
for n = 1:4
    switch(n)
        case 1
            t = U(:,3);
            R = U*D*V';
        case 2
            t = -U(:,3);
            R = U*D*V';
        case 3
            t = U(:,3);
            R = U*D'*V';
        case 4
            t = -U(:,3);
            R = U*D'*V';
    end
    
    
    
end

%impose constraint
if nargout > 3
    s = diag(S);
end

end


function po = pz6pz4(p1, p2)
%PZ4PZ3 Function responsible for multiplying a 6th order z polynomial p1
%   by a 4th order z polynomial p2
%   p1 - Is a row vector arranged like: z6 | z5 | z4 | z3 | z2 | z | 1
%   p2 - Is a row vector arranged like: z4 | z3 | z2 | z | 1
%   po - Is a row vector arranged like: 
%       z10 | z9 | z8 | z7 | z6 | z5 | z4 | z3 | z2 | z | 1

po = [  p1(1)*p2(1), ... z10
        p1(2)*p2(1) + p1(1)*p2(2), ... z9
        p1(3)*p2(1) + p1(2)*p2(2) + p1(1)*p2(3), ... z8
        p1(4)*p2(1) + p1(3)*p2(2) + p1(2)*p2(3) + p1(1)*p2(4), ... z7
        p1(5)*p2(1) + p1(4)*p2(2) + p1(3)*p2(3) + p1(2)*p2(4) + p1(1)*p2(5), ... z6
        p1(6)*p2(1) + p1(5)*p2(2) + p1(4)*p2(3) + p1(3)*p2(4) + p1(2)*p2(5), ... z5
        p1(7)*p2(1) + p1(6)*p2(2) + p1(5)*p2(3) + p1(4)*p2(4) + p1(3)*p2(5), ... z4
        p1(7)*p2(2) + p1(6)*p2(3) + p1(5)*p2(4) + p1(4)*p2(5), ... z3
        p1(7)*p2(3) + p1(6)*p2(4) + p1(5)*p2(5), ... z2
        p1(7)*p2(4) + p1(6)*p2(5), ... z
        p1(7)*p2(5)];  % 1
end

function po = pz7pz3(p1, p2)
%PZ4PZ3 Function responsible for multiplying a 7th order z polynomial p1
%   by a 3rd order z polynomial p2
%   p1 - Is a row vector arranged like: z7 | z6 | z5 | z4 | z3 | z2 | z | 1
%   p2 - Is a row vector arranged like: z3 | z2 | z | 1
%   po - Is a row vector arranged like: 
%       z10 | z9 | z8 | z7 | z6 | z5 | z4 | z3 | z2 | z | 1

po = [  p1(1)*p2(1), ... z10
        p1(2)*p2(1) + p1(1)*p2(2), ... z9
        p1(3)*p2(1) + p1(2)*p2(2) + p1(1)*p2(3), ... z8
        p1(4)*p2(1) + p1(3)*p2(2) + p1(2)*p2(3) + p1(1)*p2(4), ... z7
        p1(5)*p2(1) + p1(4)*p2(2) + p1(3)*p2(3) + p1(2)*p2(4), ... z6
        p1(6)*p2(1) + p1(5)*p2(2) + p1(4)*p2(3) + p1(3)*p2(4), ... z5
        p1(7)*p2(1) + p1(6)*p2(2) + p1(5)*p2(3) + p1(4)*p2(4), ... z4
        p1(8)*p2(1) + p1(7)*p2(2) + p1(6)*p2(3) + p1(5)*p2(4), ... z3
        p1(8)*p2(2) + p1(7)*p2(3) + p1(6)*p2(4), ... z2
        p1(8)*p2(3) + p1(7)*p2(4), ... z
        p1(8)*p2(4)];  % 1
end

function po = pz4pz3(p1, p2)
%PZ4PZ3 Function responsible for multiplying a 4th order z polynomial p1
%   by a 3rd order z polynomial p2
%   p1 - Is a row vector arranged like: z4 | z3 | z2 | z | 1
%   p2 - Is a row vector arranged like: z3 | z2 | z | 1
%   po - Is a row vector arranged like: z7 | z6 | z5 | z4 | z3 | z2 | z | 1

po = [  p1(1)*p2(1), ... z7
        p1(2)*p2(1) + p1(1)*p2(2), ... z6
        p1(3)*p2(1) + p1(2)*p2(2) + p1(1)*p2(3), ... z5
        p1(4)*p2(1) + p1(3)*p2(2) + p1(2)*p2(3) + p1(1)*p2(4), ... z4
        p1(5)*p2(1) + p1(4)*p2(2) + p1(3)*p2(3) + p1(2)*p2(4), ... z3
        p1(5)*p2(2) + p1(4)*p2(3) + p1(3)*p2(4), ... z2
        p1(5)*p2(3) + p1(4)*p2(4), ... z
        p1(5)*p2(4)];  % 1
end

function po = pz3pz3(p1, p2)
%PZ3PZ3 Function responsible for multiplying two 3rd order z polynomial
%   p1, p2 - Are row vector arranged like: z3 | z2 | z | 1
%   po - Is a row vector arranged like: z6 | z5 | z4 | z3 | z2 | z | 1

po = [  p1(1)*p2(1), ... z6
        p1(1)*p2(2) + p1(2)*p2(1), ...  z5
        p1(1)*p2(3) + p1(2)*p2(2) + p1(3)*p2(1), ... z4
        p1(1)*p2(4) + p1(2)*p2(3) + p1(3)*p2(2) + p1(4)*p2(1), ... z3
        p1(2)*p2(4) + p1(3)*p2(3) + p1(4)*p2(2), ... z2
        p1(3)*p2(4) + p1(4)*p2(3), ... z
        p1(4)*p2(4)];  % 1
end

function po = partial_subtrc(p1, p2)
%PARTIAL_SUBTRC Given polinomials p1 and p2 substract them according to the
%following expression: p1 - z*p2
% p1, p2 - are row vectors with the following arrangement
%   xz^2 | xz | x | yz^2 | yz | y | z3 | z2 | z | 1
% po - is a row vector with the following arragement
%   xz3 | xz2 | xz | x | yz3 | yz2 | yz | y | z4 | z3 | z2 | z | 1

po = [-p2(1), p1(1) - p2(2), p1(2) - p2(3), p1(3), ...
      -p2(4), p1(4) - p2(5), p1(5) - p2(6), p1(6), ...
      -p2(7), p1(7) - p2(8), p1(8) - p2(9), p1(9) - p2(10), p1(10)]; 
end

function B = gj_elim_pp(A)
%GJ_ELIM_PP Given Matriz A we perform partial pivoting as per specified in 

[~,U] = lu(A);

B = zeros(10,20);
B(1:4,:) = U(1:4,:);

%Back substitution
B(10,:) = U(10,:)/U(10,10);
B(9,:) = (U(9,:) - U(9,10)*B(10,:))/U(9,9);
B(8,:) = (U(8,:) - U(8,9)*B(9,:) - U(8,10)*B(10,:))/U(8,8);
B(7,:) = (U(7,:) - U(7,8)*B(8,:) - U(7,9)*B(9,:) - U(7,10)*B(10,:))/U(7,7);
B(6,:) = (U(6,:) - U(6,7)*B(7,:) - U(6,8)*B(8,:) - U(6,9)*B(9,:) ...
                 - U(6,10)*B(10,:))/U(6,6);
B(5,:) = (U(5,:) - U(5,6)*B(6,:) - U(5,7)*B(7,:) - U(5,8)*B(8,:) ...
                 - U(5,9)*B(9,:) - U(5,10)*B(10,:))/U(5,5);
end

function pout = p1p1(p1, p2)
%P1P1 Given two first order polynomials with the structure [a_x,
%a_y, a_z, a_w] e returns the second order polynomial x,y,z with the
%structure: pout = [a_x2, a_y2, a_z2, a_xy, a_xz, a_yz, a_x, a_y, a_z, a]

pout = [p1(1)*p2(1), ...                %x2
        p1(2)*p2(2), ...                %y2
        p1(3)*p2(3), ...                %z2
        p1(1)*p2(2) + p1(2)*p2(1), ...  %xy
        p1(1)*p2(3) + p1(3)*p2(1), ...  %xz
        p1(2)*p2(3) + p1(3)*p2(2), ...  %yz
        p1(1)*p2(4) + p1(4)*p2(1), ...  %x
        p1(2)*p2(4) + p1(4)*p2(2), ...  %y
        p1(3)*p2(4) + p1(4)*p2(3), ...  %z
        p1(4)*p2(4)];                   %1
end

function pout = p2p1(p1,p2)
%P2P1 Given two polynomials, p1 of order 2 and p2 of order 1, with
%unknowns x, y and z, return their product. An order 3 polynomial with
%structure shown below

pout = [p1(1)*p2(1), ...                                %x3
        p1(2)*p2(2), ...                                %y3
        p1(3)*p2(3), ...                                %z3
        p1(1)*p2(2) + p1(4)*p2(1), ...                  %x2y
        p1(2)*p2(1) + p1(4)*p2(2), ...                  %xy2
        p1(1)*p2(3) + p1(5)*p2(1), ...                  %x2z
        p1(3)*p2(1) + p1(5)*p2(3), ...                  %xz2
        p1(2)*p2(3) + p1(6)*p2(2), ...                  %y2z
        p1(3)*p2(2) + p1(6)*p2(3), ...                  %yz2
        p1(4)*p2(3) + p1(5)*p2(2) + p1(6)*p2(1), ...    %xyz
        p1(1)*p2(4) + p1(7)*p2(1), ...                  %x2
        p1(2)*p2(4) + p1(8)*p2(2), ...                  %y2
        p1(3)*p2(4) + p1(9)*p2(3), ...                  %z2
        p1(4)*p2(4) + p1(7)*p2(2) + p1(8)*p2(1), ...    %xy
        p1(5)*p2(4) + p1(7)*p2(3) + p1(9)*p2(1), ...    %xz
        p1(6)*p2(4) + p1(8)*p2(3) + p1(9)*p2(2), ...    %yz
        p1(7)*p2(4) + p1(10)*p2(1), ...                 %x
        p1(8)*p2(4) + p1(10)*p2(2), ...                 %y
        p1(9)*p2(4) + p1(10)*p2(3), ...                 %z
        p1(10)*p2(4)];                                  %1
end

% function useless()
% 
% % F is size 3x3 (applying (10) into constraint (5)
% % det(F) = F11*F22*F33 + F12*F23*F31 + F13*F21*F32 - F31*F22*F13 - 
% % F32*F23*F11 - F33*F21*F12
% %
% % F1 = F11*F22*F33
% % F2 = F12*F23*F31
% % F3 = F13*F21*F32
% % F4 = F31*F22*F13
% % F5 = F32*F23*F11
% % F6 = F33*F21*F12
% %
% % F1 = W11*W22*W33 + W11*X22*X33*x^2 + W22*X11*X33*x^2 + W33*X11*X22*x^2 ... x
% %      + X11*X22*X33*x^3 + W11*Y22*Y33*y^2 + W22*Y11*Y33*y^2 ... x
% %      + W33*Y11*Y22*y^2 + Y11*Y22*Y33*y^3 + W11*Z22*Z33*z^2 ... x
% %      + W22*Z11*Z33*z^2 + W33*Z11*Z22*z^2 + Z11*Z22*Z33*z^3 ... x
% %      + W11*W22*X33*x + W11*W33*X22*x + W22*W33*X11*x + W11*W22*Y33*y ... x
% %      + W11*W33*Y22*y + W22*W33*Y11*y + W11*W22*Z33*z + W11*W33*Z22*z ... x
% %      + W22*W33*Z11*z + W11*X22*Y33*x*y + W11*X33*Y22*x*y ... x
% %      + W22*X11*Y33*x*y + W22*X33*Y11*x*y + W33*X11*Y22*x*y ... x
% %      + W33*X22*Y11*x*y + W11*X22*Z33*x*z + W11*X33*Z22*x*z ... x
% %      + W22*X11*Z33*x*z + W22*X33*Z11*x*z + W33*X11*Z22*x*z ... x
% %      + W33*X22*Z11*x*z + W11*Y22*Z33*y*z + W11*Y33*Z22*y*z ... x
% %      + W22*Y11*Z33*y*z + W22*Y33*Z11*y*z + W33*Y11*Z22*y*z ... x
% %      + W33*Y22*Z11*y*z + X11*X22*Y33*x^2*y + X11*X33*Y22*x^2*y ... x
% %      + X22*X33*Y11*x^2*y + X11*Y22*Y33*x*y^2 + X22*Y11*Y33*x*y^2 ... x
% %      + X33*Y11*Y22*x*y^2 + X11*X22*Z33*x^2*z + X11*X33*Z22*x^2*z ... x
% %      + X22*X33*Z11*x^2*z + X11*Z22*Z33*x*z^2 + X22*Z11*Z33*x*z^2 ... x
% %      + X33*Z11*Z22*x*z^2 + Y11*Y22*Z33*y^2*z + Y11*Y33*Z22*y^2*z ... x
% %      + Y22*Y33*Z11*y^2*z + Y11*Z22*Z33*y*z^2 + Y22*Z11*Z33*y*z^2 ... x
% %      + Y33*Z11*Z22*y*z^2 + X11*Y22*Z33*x*y*z + X11*Y33*Z22*x*y*z ... x 
% %      + X22*Y11*Z33*x*y*z + X22*Y33*Z11*x*y*z + X33*Y11*Z22*x*y*z ... x
% %      + X33*Y22*Z11*x*y*z    x
% 
% 
% F1_x3 = X_(1,1)*X_(2,2)*X_(3,3);
% F1_y3 = Y_(1,1)*Y_(2,2)*Y_(3,3);
% F1_x2y = X_(1,1)*X_(2,2)*Y_(3,3) + X_(1,1)*X_(3,3)*Y_(2,2) ...
%          + X_(2,2)*X_(3,3)*Y_(1,1);
% F1_xy2 = X_(1,1)*Y_(2,2)*Y_(3,3) + X_(2,2)*Y_(1,1)*Y_(3,3) ...
%          + X_(3,3)*Y_(1,1)*Y_(2,2);
% F1_x2z = X_(1,1)*X_(2,2)*Z_(3,3) + X_(1,1)*X_(3,3)*Z_(2,2) ...
%          + X_(2,2)*X_(3,3)*Z_(1,1);
% F1_x2 = W_(1,1)*X_(2,2)*X_(3,3) + W_(2,2)*X_(1,1)*X_(3,3) ...
%         + W_(3,3)*X_(1,1)*X_(2,2);
% F1_y2z = Y_(1,1)*Y_(2,2)*Z_(3,3) + Y_(1,1)*Y_(3,3)*Z_(2,2) ...
%          + Y_(2,2)*Y_(3,3)*Z_(1,1);
% F1_y2 = W_(1,1)*Y_(2,2)*Y_(3,3) + W_(2,2)*Y_(1,1)*Y_(3,3) ...
%         + W_(3,3)*Y_(1,1)*Y_(2,2);
% F1_xyz = X_(1,1)*Y_(2,2)*Z_(3,3) + X_(1,1)*Y_(3,3)*Z_(2,2) ...
%          + X_(2,2)*Y_(1,1)*Z_(3,3) + X_(2,2)*Y_(3,3)*Z_(1,1) ...
%          + X_(3,3)*Y_(1,1)*Z_(2,2) + X_(3,3)*Y_(2,2)*Z_(1,1);          
% F1_xy = W_(1,1)*X_(2,2)*Y_(3,3) + W_(1,1)*X_(3,3)*Y_(2,2) ...
%         + W_(2,2)*X_(1,1)*Y_(3,3) + W_(2,2)*X_(3,3)*Y_(1,1) ...
%         + W_(3,3)*X_(1,1)*Y_(2,2) + W_(3,3)*X_(2,2)*Y_(1,1);
% 
% % The polinomials of Z for F1
% % F1_x = W_(1,1)*W_(2,2)*X_(3,3) + W_(1,1)*W_(3,3)*X_(2,2) ...
% %         + W_(2,2)*W_(3,3)*X_(1,1) + W_(1,1)*X_(2,2)*Z_(3,3)*z ...
% %         + W_(1,1)*X_(3,3)*Z_(2,2)*z + W_(2,2)*X_(1,1)*Z_(3,3)*z ...
% %         + W_(2,2)*X_(3,3)*Z_(1,1)*z + W_(3,3)*X_(1,1)*Z_(2,2)*z ...
% %         + W_(3,3)*X_(2,2)*Z_(1,1)*z + X_(1,1)*Z_(2,2)*Z_(3,3)*z^2 ...
% %         + X_(2,2)*Z_(1,1)*Z_(3,3)*z^2 + + X_(3,3)*Z_(1,1)*Z_(2,2)*z^2;
% % F1_y = W_(1,1)*W_(2,2)*Y_(3,3) + W_(1,1)*W_(3,3)*Y_(2,2) ...
% %        + W_(2,2)*W_(3,3)*Y_(1,1) + W_(1,1)*Y_(2,2)*Z_(3,3)*z ...
% %        + W_(1,1)*Y_(3,3)*Z_(2,2)*z + W_(2,2)*Y_(1,1)*Z_(3,3)*z ...
% %        + W_(2,2)*Y_(3,3)*Z_(1,1)*z + W_(3,3)*Y_(1,1)*Z_(2,2)*z ...
% %        + W_(3,3)*Y_(2,2)*Z_(1,1)*z + Y_(1,1)*Z_(2,2)*Z_(3,3)*z^2 ...
% %        + Y_(2,2)*Z_(1,1)*Z_(3,3)*z^2 + Y_(3,3)*Z_(1,1)*Z_(2,2)*z^2;
% % F1_1 = W_(1,1)*W_(2,2)*W_(3,3) + W_(1,1)*W_(2,2)*Z_(3,3) ...
% %        + W_(1,1)*W_(3,3)*Z_(2,2) + W_(2,2)*W_(3,3)*Z_(1,1)*z ...
% %        + W_(1,1)*Z_(2,2)*Z_(3,3)*z^2 + W_(2,2)*Z_(1,1)*Z_(3,3)*z^2 ...
% %        + W_(3,3)*Z_(1,1)*Z_(2,2)*z^2 + Z_(1,1)*Z_(2,2)*Z_(3,3)*z^3;
% 
% 
% % F2 = W12*W23*W31 + W12*X23*X31*x^2 + W23*X12*X31*x^2 + W31*X12*X23*x^2 ... x
% %      + X12*X23*X31*x^3 + W12*Y23*Y31*y^2 + W23*Y12*Y31*y^2 ... x
% %      + W31*Y12*Y23*y^2 + Y12*Y23*Y31*y^3 + W12*Z23*Z31*z^2 ... x
% %      + W23*Z12*Z31*z^2 + W31*Z12*Z23*z^2 + Z12*Z23*Z31*z^3 ... x
% %      + W12*W23*X31*x + W12*W31*X23*x + W23*W31*X12*x + W12*W23*Y31*y ... x
% %      + W12*W31*Y23*y + W23*W31*Y12*y + W12*W23*Z31*z + W12*W31*Z23*z ... x
% %      + W23*W31*Z12*z + W12*X23*Y31*x*y + W12*X31*Y23*x*y ... x
% %      + W23*X12*Y31*x*y + W23*X31*Y12*x*y + W31*X12*Y23*x*y ... x
% %      + W31*X23*Y12*x*y + W12*X23*Z31*x*z + W12*X31*Z23*x*z ... x
% %      + W23*X12*Z31*x*z + W23*X31*Z12*x*z + W31*X12*Z23*x*z ... x
% %      + W31*X23*Z12*x*z + W12*Y23*Z31*y*z + W12*Y31*Z23*y*z ... x
% %      + W23*Y12*Z31*y*z + W23*Y31*Z12*y*z + W31*Y12*Z23*y*z ... x
% %      + W31*Y23*Z12*y*z + X12*X23*Y31*x^2*y + X12*X31*Y23*x^2*y ... x
% %      + X23*X31*Y12*x^2*y + X12*Y23*Y31*x*y^2 + X23*Y12*Y31*x*y^2 ... x
% %      + X31*Y12*Y23*x*y^2 + X12*X23*Z31*x^2*z + X12*X31*Z23*x^2*z ... x
% %      + X23*X31*Z12*x^2*z + X12*Z23*Z31*x*z^2 + X23*Z12*Z31*x*z^2 ... x
% %      + X31*Z12*Z23*x*z^2 + Y12*Y23*Z31*y^2*z + Y12*Y31*Z23*y^2*z ... x
% %      + Y23*Y31*Z12*y^2*z + Y12*Z23*Z31*y*z^2 + Y23*Z12*Z31*y*z^2 ... x
% %      + Y31*Z12*Z23*y*z^2 + X12*Y23*Z31*x*y*z + X12*Y31*Z23*x*y*z ... x 
% %      + X23*Y12*Z31*x*y*z + X23*Y31*Z12*x*y*z + X31*Y12*Z23*x*y*z ... x
% %      + X31*Y23*Z12*x*y*z    x
% 
% 
% F2_x3 = X_(1,2)*X_(2,3)*X_(3,1);
% F2_y3 = Y_(1,2)*Y_(2,3)*Y_(3,1);
% F2_x2y = X_(1,2)*X_(2,3)*Y_(3,1) + X_(1,2)*X_(3,1)*Y_(2,3) ...
%          + X_(2,3)*X_(3,1)*Y_(1,2);
% F2_xy2 = X_(1,2)*Y_(2,3)*Y_(3,1) + X_(2,3)*Y_(1,2)*Y_(3,1) ...
%          + X_(3,1)*Y_(1,2)*Y_(2,3);
% F2_x2z = X_(1,2)*X_(2,3)*Z_(3,1) + X_(1,2)*X_(3,1)*Z_(2,3) ...
%          + X_(2,3)*X_(3,1)*Z_(1,2);
% F2_x2 = W_(1,2)*X_(2,3)*X_(3,1) + W_(2,3)*X_(1,2)*X_(3,1) ...
%         + W_(3,1)*X_(1,2)*X_(2,3);
% F2_y2z = Y_(1,2)*Y_(2,3)*Z_(3,1) + Y_(1,2)*Y_(3,1)*Z_(2,3) ...
%          + Y_(2,3)*Y_(3,1)*Z_(1,2);
% F2_y2 = W_(1,2)*Y_(2,3)*Y_(3,1) + W_(2,3)*Y_(1,2)*Y_(3,1) ...
%         + W_(3,1)*Y_(1,2)*Y_(2,3);
% F2_xyz = X_(1,2)*Y_(2,3)*Z_(3,1) + X_(1,2)*Y_(3,1)*Z_(2,3) ...
%          + X_(2,3)*Y_(1,2)*Z_(3,1) + X_(2,3)*Y_(3,1)*Z_(1,2) ...
%          + X_(3,1)*Y_(1,2)*Z_(2,3) + X_(3,1)*Y_(2,3)*Z_(1,2);          
% F2_xy = W_(1,2)*X_(2,3)*Y_(3,1) + W_(1,2)*X_(3,1)*Y_(2,3) ...
%         + W_(2,3)*X_(1,2)*Y_(3,1) + W_(2,3)*X_(3,1)*Y_(1,2) ...
%         + W_(3,1)*X_(1,2)*Y_(2,3) + W_(3,1)*X_(2,3)*Y_(1,2);
% 
% % The polinomials of Z for F2
% % F2_x = W_(1,2)*W_(2,3)*X_(3,1) + W_(1,2)*W_(3,1)*X_(2,3) ...
% %         + W_(2,3)*W_(3,1)*X_(1,2) + W_(1,2)*X_(2,3)*Z_(3,1)*z ...
% %         + W_(1,2)*X_(3,1)*Z_(2,3)*z + W_(2,3)*X_(1,2)*Z_(3,1)*z ...
% %         + W_(2,3)*X_(3,1)*Z_(1,2)*z + W_(3,1)*X_(1,2)*Z_(2,3)*z ...
% %         + W_(3,1)*X_(2,3)*Z_(1,2)*z + X_(1,2)*Z_(2,3)*Z_(3,1)*z^2 ...
% %         + X_(2,3)*Z_(1,2)*Z_(3,1)*z^2 + + X_(3,1)*Z_(1,2)*Z_(2,3)*z^2;
% % F2_y = W_(1,2)*W_(2,3)*Y_(3,1) + W_(1,2)*W_(3,1)*Y_(2,3) ...
% %        + W_(2,3)*W_(3,1)*Y_(1,2) + W_(1,2)*Y_(2,3)*Z_(3,1)*z ...
% %        + W_(1,2)*Y_(3,1)*Z_(2,3)*z + W_(2,3)*Y_(1,2)*Z_(3,1)*z ...
% %        + W_(2,3)*Y_(3,1)*Z_(1,2)*z + W_(3,1)*Y_(1,2)*Z_(2,3)*z ...
% %        + W_(3,1)*Y_(2,3)*Z_(1,2)*z + Y_(1,2)*Z_(2,3)*Z_(3,1)*z^2 ...
% %        + Y_(2,3)*Z_(1,2)*Z_(3,1)*z^2 + Y_(3,1)*Z_(1,2)*Z_(2,3)*z^2;
% % F2_1 = W_(1,2)*W_(2,3)*W_(3,1) + W_(1,2)*W_(2,3)*Z_(3,1) ...
% %        + W_(1,2)*W_(3,1)*Z_(2,3) + W_(2,3)*W_(3,1)*Z_(1,2)*z ...
% %        + W_(1,2)*Z_(2,3)*Z_(3,1)*z^2 + W_(2,3)*Z_(1,2)*Z_(3,1)*z^2 ...
% %        + W_(3,1)*Z_(1,2)*Z_(2,3)*z^2 + Z_(1,2)*Z_(2,3)*Z_(3,1)*z^3;
% 
% % F3 = W13*W21*W32 + W13*X21*X32*x^2 + W21*X13*X32*x^2 + W32*X13*X21*x^2 ... x
% %      + X13*X21*X32*x^3 + W13*Y21*Y32*y^2 + W21*Y13*Y32*y^2 ... x
% %      + W32*Y13*Y21*y^2 + Y13*Y21*Y32*y^3 + W13*Z21*Z32*z^2 ... x
% %      + W21*Z13*Z32*z^2 + W32*Z13*Z21*z^2 + Z13*Z21*Z32*z^3 ... x
% %      + W13*W21*X32*x + W13*W32*X21*x + W21*W32*X13*x + W13*W21*Y32*y ... x
% %      + W13*W32*Y21*y + W21*W32*Y13*y + W13*W21*Z32*z + W13*W32*Z21*z ... x
% %      + W21*W32*Z13*z + W13*X21*Y32*x*y + W13*X32*Y21*x*y ... x
% %      + W21*X13*Y32*x*y + W21*X32*Y13*x*y + W32*X13*Y21*x*y ... x
% %      + W32*X21*Y13*x*y + W13*X21*Z32*x*z + W13*X32*Z21*x*z ... x
% %      + W21*X13*Z32*x*z + W21*X32*Z13*x*z + W32*X13*Z21*x*z ... x
% %      + W32*X21*Z13*x*z + W13*Y21*Z32*y*z + W13*Y32*Z21*y*z ... x
% %      + W21*Y13*Z32*y*z + W21*Y32*Z13*y*z + W32*Y13*Z21*y*z ... x
% %      + W32*Y21*Z13*y*z + X13*X21*Y32*x^2*y + X13*X32*Y21*x^2*y ... x
% %      + X21*X32*Y13*x^2*y + X13*Y21*Y32*x*y^2 + X21*Y13*Y32*x*y^2 ... x
% %      + X32*Y13*Y21*x*y^2 + X13*X21*Z32*x^2*z + X13*X32*Z21*x^2*z ... x
% %      + X21*X32*Z13*x^2*z + X13*Z21*Z32*x*z^2 + X21*Z13*Z32*x*z^2 ... x
% %      + X32*Z13*Z21*x*z^2 + Y13*Y21*Z32*y^2*z + Y13*Y32*Z21*y^2*z ... x
% %      + Y21*Y32*Z13*y^2*z + Y13*Z21*Z32*y*z^2 + Y21*Z13*Z32*y*z^2 ... x
% %      + Y32*Z13*Z21*y*z^2 + X13*Y21*Z32*x*y*z + X13*Y32*Z21*x*y*z ... x 
% %      + X21*Y13*Z32*x*y*z + X21*Y32*Z13*x*y*z + X32*Y13*Z21*x*y*z ... x
% %      + X32*Y21*Z13*x*y*z    x
% 
% 
% F3_x3 = X_(1,3)*X_(2,1)*X_(3,2);
% F3_y3 = Y_(1,3)*Y_(2,1)*Y_(3,2);
% F3_x2y = X_(1,3)*X_(2,1)*Y_(3,2) + X_(1,3)*X_(3,2)*Y_(2,1) ...
%          + X_(2,1)*X_(3,2)*Y_(1,3);
% F3_xy2 = X_(1,3)*Y_(2,1)*Y_(3,2) + X_(2,1)*Y_(1,3)*Y_(3,2) ...
%          + X_(3,2)*Y_(1,3)*Y_(2,1);
% F3_x2z = X_(1,3)*X_(2,1)*Z_(3,2) + X_(1,3)*X_(3,2)*Z_(2,1) ...
%          + X_(2,1)*X_(3,2)*Z_(1,3);
% F3_x2 = W_(1,3)*X_(2,1)*X_(3,2) + W_(2,1)*X_(1,3)*X_(3,2) ...
%         + W_(3,2)*X_(1,3)*X_(2,1);
% F3_y2z = Y_(1,3)*Y_(2,1)*Z_(3,2) + Y_(1,3)*Y_(3,2)*Z_(2,1) ...
%          + Y_(2,1)*Y_(3,2)*Z_(1,3);
% F3_y2 = W_(1,3)*Y_(2,1)*Y_(3,2) + W_(2,1)*Y_(1,3)*Y_(3,2) ...
%         + W_(3,2)*Y_(1,3)*Y_(2,1);
% F3_xyz = X_(1,3)*Y_(2,1)*Z_(3,2) + X_(1,3)*Y_(3,2)*Z_(2,1) ...
%          + X_(2,1)*Y_(1,3)*Z_(3,2) + X_(2,1)*Y_(3,2)*Z_(1,3) ...
%          + X_(3,2)*Y_(1,3)*Z_(2,1) + X_(3,2)*Y_(2,1)*Z_(1,3);          
% F3_xy = W_(1,3)*X_(2,1)*Y_(3,2) + W_(1,3)*X_(3,2)*Y_(2,1) ...
%         + W_(2,1)*X_(1,3)*Y_(3,2) + W_(2,1)*X_(3,2)*Y_(1,3) ...
%         + W_(3,2)*X_(1,3)*Y_(2,1) + W_(3,2)*X_(2,1)*Y_(1,3);
% 
% % The polinomials of Z for F3
% % F3_x = W_(1,3)*W_(2,1)*X_(3,2) + W_(1,3)*W_(3,2)*X_(2,1) ...
% %         + W_(2,1)*W_(3,2)*X_(1,3) + W_(1,3)*X_(2,1)*Z_(3,2)*z ...
% %         + W_(1,3)*X_(3,2)*Z_(2,1)*z + W_(2,1)*X_(1,3)*Z_(3,2)*z ...
% %         + W_(2,1)*X_(3,2)*Z_(1,3)*z + W_(3,2)*X_(1,3)*Z_(2,1)*z ...
% %         + W_(3,2)*X_(2,1)*Z_(1,3)*z + X_(1,3)*Z_(2,1)*Z_(3,2)*z^2 ...
% %         + X_(2,1)*Z_(1,3)*Z_(3,2)*z^2 + + X_(3,2)*Z_(1,3)*Z_(2,1)*z^2;
% % F3_y = W_(1,3)*W_(2,1)*Y_(3,2) + W_(1,3)*W_(3,2)*Y_(2,1) ...
% %        + W_(2,1)*W_(3,2)*Y_(1,3) + W_(1,3)*Y_(2,1)*Z_(3,2)*z ...
% %        + W_(1,3)*Y_(3,2)*Z_(2,1)*z + W_(2,1)*Y_(1,3)*Z_(3,2)*z ...
% %        + W_(2,1)*Y_(3,2)*Z_(1,3)*z + W_(3,2)*Y_(1,3)*Z_(2,1)*z ...
% %        + W_(3,2)*Y_(2,1)*Z_(1,3)*z + Y_(1,3)*Z_(2,1)*Z_(3,2)*z^2 ...
% %        + Y_(2,1)*Z_(1,3)*Z_(3,2)*z^2 + Y_(3,2)*Z_(1,3)*Z_(2,1)*z^2;
% % F3_1 = W_(1,3)*W_(2,1)*W_(3,2) + W_(1,3)*W_(2,1)*Z_(3,2) ...
% %        + W_(1,3)*W_(3,2)*Z_(2,1) + W_(2,1)*W_(3,2)*Z_(1,3)*z ...
% %        + W_(1,3)*Z_(2,1)*Z_(3,2)*z^2 + W_(2,1)*Z_(1,3)*Z_(3,2)*z^2 ...
% %        + W_(3,2)*Z_(1,3)*Z_(2,1)*z^2 + Z_(1,3)*Z_(2,1)*Z_(3,2)*z^3;
% 
% % F4 = W31*W22*W13 + W31*X22*X13*x^2 + W22*X31*X13*x^2 + W13*X31*X22*x^2 ... x
% %      + X31*X22*X13*x^3 + W31*Y22*Y13*y^2 + W22*Y31*Y13*y^2 ... x
% %      + W13*Y31*Y22*y^2 + Y31*Y22*Y13*y^3 + W31*Z22*Z13*z^2 ... x
% %      + W22*Z31*Z13*z^2 + W13*Z31*Z22*z^2 + Z31*Z22*Z13*z^3 ... x
% %      + W31*W22*X13*x + W31*W13*X22*x + W22*W13*X31*x + W31*W22*Y13*y ... x
% %      + W31*W13*Y22*y + W22*W13*Y31*y + W31*W22*Z13*z + W31*W13*Z22*z ... x
% %      + W22*W13*Z31*z + W31*X22*Y13*x*y + W31*X13*Y22*x*y ... x
% %      + W22*X31*Y13*x*y + W22*X13*Y31*x*y + W13*X31*Y22*x*y ... x
% %      + W13*X22*Y31*x*y + W31*X22*Z13*x*z + W31*X13*Z22*x*z ... x
% %      + W22*X31*Z13*x*z + W22*X13*Z31*x*z + W13*X31*Z22*x*z ... x
% %      + W13*X22*Z31*x*z + W31*Y22*Z13*y*z + W31*Y13*Z22*y*z ... x
% %      + W22*Y31*Z13*y*z + W22*Y13*Z31*y*z + W13*Y31*Z22*y*z ... x
% %      + W13*Y22*Z31*y*z + X31*X22*Y13*x^2*y + X31*X13*Y22*x^2*y ... x
% %      + X22*X13*Y31*x^2*y + X31*Y22*Y13*x*y^2 + X22*Y31*Y13*x*y^2 ... x
% %      + X13*Y31*Y22*x*y^2 + X31*X22*Z13*x^2*z + X31*X13*Z22*x^2*z ... x
% %      + X22*X13*Z31*x^2*z + X31*Z22*Z13*x*z^2 + X22*Z31*Z13*x*z^2 ... x
% %      + X13*Z31*Z22*x*z^2 + Y31*Y22*Z13*y^2*z + Y31*Y13*Z22*y^2*z ... x
% %      + Y22*Y13*Z31*y^2*z + Y31*Z22*Z13*y*z^2 + Y22*Z31*Z13*y*z^2 ... x
% %      + Y13*Z31*Z22*y*z^2 + X31*Y22*Z13*x*y*z + X31*Y13*Z22*x*y*z ... x 
% %      + X22*Y31*Z13*x*y*z + X22*Y13*Z31*x*y*z + X13*Y31*Z22*x*y*z ... x
% %      + X13*Y22*Z31*x*y*z    x
% 
% 
% F4_x3 = X_(3,1)*X_(2,2)*X_(1,3);
% F4_y3 = Y_(3,1)*Y_(2,2)*Y_(1,3);
% F4_x2y = X_(3,1)*X_(2,2)*Y_(1,3) + X_(3,1)*X_(1,3)*Y_(2,2) ...
%          + X_(2,2)*X_(1,3)*Y_(3,1);
% F4_xy2 = X_(3,1)*Y_(2,2)*Y_(1,3) + X_(2,2)*Y_(3,1)*Y_(1,3) ...
%          + X_(1,3)*Y_(3,1)*Y_(2,2);
% F4_x2z = X_(3,1)*X_(2,2)*Z_(1,3) + X_(3,1)*X_(1,3)*Z_(2,2) ...
%          + X_(2,2)*X_(1,3)*Z_(3,1);
% F4_x2 = W_(3,1)*X_(2,2)*X_(1,3) + W_(2,2)*X_(3,1)*X_(1,3) ...
%         + W_(1,3)*X_(3,1)*X_(2,2);
% F4_y2z = Y_(3,1)*Y_(2,2)*Z_(1,3) + Y_(3,1)*Y_(1,3)*Z_(2,2) ...
%          + Y_(2,2)*Y_(1,3)*Z_(3,1);
% F4_y2 = W_(3,1)*Y_(2,2)*Y_(1,3) + W_(2,2)*Y_(3,1)*Y_(1,3) ...
%         + W_(1,3)*Y_(3,1)*Y_(2,2);
% F4_xyz = X_(3,1)*Y_(2,2)*Z_(1,3) + X_(3,1)*Y_(1,3)*Z_(2,2) ...
%          + X_(2,2)*Y_(3,1)*Z_(1,3) + X_(2,2)*Y_(1,3)*Z_(3,1) ...
%          + X_(1,3)*Y_(3,1)*Z_(2,2) + X_(1,3)*Y_(2,2)*Z_(3,1);          
% F4_xy = W_(3,1)*X_(2,2)*Y_(1,3) + W_(3,1)*X_(1,3)*Y_(2,2) ...
%         + W_(2,2)*X_(3,1)*Y_(1,3) + W_(2,2)*X_(1,3)*Y_(3,1) ...
%         + W_(1,3)*X_(3,1)*Y_(2,2) + W_(1,3)*X_(2,2)*Y_(3,1);
% 
% % The polinomials of Z for F4
% % F4_x = W_(3,1)*W_(2,2)*X_(1,3) + W_(3,1)*W_(1,3)*X_(2,2) ...
% %         + W_(2,2)*W_(1,3)*X_(3,1) + W_(3,1)*X_(2,2)*Z_(1,3)*z ...
% %         + W_(3,1)*X_(1,3)*Z_(2,2)*z + W_(2,2)*X_(3,1)*Z_(1,3)*z ...
% %         + W_(2,2)*X_(1,3)*Z_(3,1)*z + W_(1,3)*X_(3,1)*Z_(2,2)*z ...
% %         + W_(1,3)*X_(2,2)*Z_(3,1)*z + X_(3,1)*Z_(2,2)*Z_(1,3)*z^2 ...
% %         + X_(2,2)*Z_(3,1)*Z_(1,3)*z^2 + + X_(1,3)*Z_(3,1)*Z_(2,2)*z^2;
% % F4_y = W_(3,1)*W_(2,2)*Y_(1,3) + W_(3,1)*W_(1,3)*Y_(2,2) ...
% %        + W_(2,2)*W_(1,3)*Y_(3,1) + W_(3,1)*Y_(2,2)*Z_(1,3)*z ...
% %        + W_(3,1)*Y_(1,3)*Z_(2,2)*z + W_(2,2)*Y_(3,1)*Z_(1,3)*z ...
% %        + W_(2,2)*Y_(1,3)*Z_(3,1)*z + W_(1,3)*Y_(3,1)*Z_(2,2)*z ...
% %        + W_(1,3)*Y_(2,2)*Z_(3,1)*z + Y_(3,1)*Z_(2,2)*Z_(1,3)*z^2 ...
% %        + Y_(2,2)*Z_(3,1)*Z_(1,3)*z^2 + Y_(1,3)*Z_(3,1)*Z_(2,2)*z^2;
% % F4_1 = W_(3,1)*W_(2,2)*W_(1,3) + W_(3,1)*W_(2,2)*Z_(1,3) ...
% %        + W_(3,1)*W_(1,3)*Z_(2,2) + W_(2,2)*W_(1,3)*Z_(3,1)*z ...
% %        + W_(3,1)*Z_(2,2)*Z_(1,3)*z^2 + W_(2,2)*Z_(3,1)*Z_(1,3)*z^2 ...
% %        + W_(1,3)*Z_(3,1)*Z_(2,2)*z^2 + Z_(3,1)*Z_(2,2)*Z_(1,3)*z^3;
% 
% 
% % F5 = W32*W23*W11 + W32*X23*X11*x^2 + W23*X32*X11*x^2 + W11*X32*X23*x^2 ... x
% %      + X32*X23*X11*x^3 + W32*Y23*Y11*y^2 + W23*Y32*Y11*y^2 ... x
% %      + W11*Y32*Y23*y^2 + Y32*Y23*Y11*y^3 + W32*Z23*Z11*z^2 ... x
% %      + W23*Z32*Z11*z^2 + W11*Z32*Z23*z^2 + Z32*Z23*Z11*z^3 ... x
% %      + W32*W23*X11*x + W32*W11*X23*x + W23*W11*X32*x + W32*W23*Y11*y ... x
% %      + W32*W11*Y23*y + W23*W11*Y32*y + W32*W23*Z11*z + W32*W11*Z23*z ... x
% %      + W23*W11*Z32*z + W32*X23*Y11*x*y + W32*X11*Y23*x*y ... x
% %      + W23*X32*Y11*x*y + W23*X11*Y32*x*y + W11*X32*Y23*x*y ... x
% %      + W11*X23*Y32*x*y + W32*X23*Z11*x*z + W32*X11*Z23*x*z ... x
% %      + W23*X32*Z11*x*z + W23*X11*Z32*x*z + W11*X32*Z23*x*z ... x
% %      + W11*X23*Z32*x*z + W32*Y23*Z11*y*z + W32*Y11*Z23*y*z ... x
% %      + W23*Y32*Z11*y*z + W23*Y11*Z32*y*z + W11*Y32*Z23*y*z ... x
% %      + W11*Y23*Z32*y*z + X32*X23*Y11*x^2*y + X32*X11*Y23*x^2*y ... x
% %      + X23*X11*Y32*x^2*y + X32*Y23*Y11*x*y^2 + X23*Y32*Y11*x*y^2 ... x
% %      + X11*Y32*Y23*x*y^2 + X32*X23*Z11*x^2*z + X32*X11*Z23*x^2*z ... x
% %      + X23*X11*Z32*x^2*z + X32*Z23*Z11*x*z^2 + X23*Z32*Z11*x*z^2 ... x
% %      + X11*Z32*Z23*x*z^2 + Y32*Y23*Z11*y^2*z + Y32*Y11*Z23*y^2*z ... x
% %      + Y23*Y11*Z32*y^2*z + Y32*Z23*Z11*y*z^2 + Y23*Z32*Z11*y*z^2 ... x
% %      + Y11*Z32*Z23*y*z^2 + X32*Y23*Z11*x*y*z + X32*Y11*Z23*x*y*z ... x 
% %      + X23*Y32*Z11*x*y*z + X23*Y11*Z32*x*y*z + X11*Y32*Z23*x*y*z ... x
% %      + X11*Y23*Z32*x*y*z    x
% 
% 
% F5_x3 = X_(3,2)*X_(2,3)*X_(1,1);
% F5_y3 = Y_(3,2)*Y_(2,3)*Y_(1,1);
% F5_x2y = X_(3,2)*X_(2,3)*Y_(1,1) + X_(3,2)*X_(1,1)*Y_(2,3) ...
%          + X_(2,3)*X_(1,1)*Y_(3,2);
% F5_xy2 = X_(3,2)*Y_(2,3)*Y_(1,1) + X_(2,3)*Y_(3,2)*Y_(1,1) ...
%          + X_(1,1)*Y_(3,2)*Y_(2,3);
% F5_x2z = X_(3,2)*X_(2,3)*Z_(1,1) + X_(3,2)*X_(1,1)*Z_(2,3) ...
%          + X_(2,3)*X_(1,1)*Z_(3,2);
% F5_x2 = W_(3,2)*X_(2,3)*X_(1,1) + W_(2,3)*X_(3,2)*X_(1,1) ...
%         + W_(1,1)*X_(3,2)*X_(2,3);
% F5_y2z = Y_(3,2)*Y_(2,3)*Z_(1,1) + Y_(3,2)*Y_(1,1)*Z_(2,3) ...
%          + Y_(2,3)*Y_(1,1)*Z_(3,2);
% F5_y2 = W_(3,2)*Y_(2,3)*Y_(1,1) + W_(2,3)*Y_(3,2)*Y_(1,1) ...
%         + W_(1,1)*Y_(3,2)*Y_(2,3);
% F5_xyz = X_(3,2)*Y_(2,3)*Z_(1,1) + X_(3,2)*Y_(1,1)*Z_(2,3) ...
%          + X_(2,3)*Y_(3,2)*Z_(1,1) + X_(2,3)*Y_(1,1)*Z_(3,2) ...
%          + X_(1,1)*Y_(3,2)*Z_(2,3) + X_(1,1)*Y_(2,3)*Z_(3,2);          
% F5_xy = W_(3,2)*X_(2,3)*Y_(1,1) + W_(3,2)*X_(1,1)*Y_(2,3) ...
%         + W_(2,3)*X_(3,2)*Y_(1,1) + W_(2,3)*X_(1,1)*Y_(3,2) ...
%         + W_(1,1)*X_(3,2)*Y_(2,3) + W_(1,1)*X_(2,3)*Y_(3,2);
% 
% % The polinomials of Z for F5
% % F5_x = W_(3,2)*W_(2,3)*X_(1,1) + W_(3,2)*W_(1,1)*X_(2,3) ...
% %         + W_(2,3)*W_(1,1)*X_(3,2) + W_(3,2)*X_(2,3)*Z_(1,1)*z ...
% %         + W_(3,2)*X_(1,1)*Z_(2,3)*z + W_(2,3)*X_(3,2)*Z_(1,1)*z ...
% %         + W_(2,3)*X_(1,1)*Z_(3,2)*z + W_(1,1)*X_(3,2)*Z_(2,3)*z ...
% %         + W_(1,1)*X_(2,3)*Z_(3,2)*z + X_(3,2)*Z_(2,3)*Z_(1,1)*z^2 ...
% %         + X_(2,3)*Z_(3,2)*Z_(1,1)*z^2 + + X_(1,1)*Z_(3,2)*Z_(2,3)*z^2;
% % F5_y = W_(3,2)*W_(2,3)*Y_(1,1) + W_(3,2)*W_(1,1)*Y_(2,3) ...
% %        + W_(2,3)*W_(1,1)*Y_(3,2) + W_(3,2)*Y_(2,3)*Z_(1,1)*z ...
% %        + W_(3,2)*Y_(1,1)*Z_(2,3)*z + W_(2,3)*Y_(3,2)*Z_(1,1)*z ...
% %        + W_(2,3)*Y_(1,1)*Z_(3,2)*z + W_(1,1)*Y_(3,2)*Z_(2,3)*z ...
% %        + W_(1,1)*Y_(2,3)*Z_(3,2)*z + Y_(3,2)*Z_(2,3)*Z_(1,1)*z^2 ...
% %        + Y_(2,3)*Z_(3,2)*Z_(1,1)*z^2 + Y_(1,1)*Z_(3,2)*Z_(2,3)*z^2;
% % F5_1 = W_(3,2)*W_(2,3)*W_(1,1) + W_(3,2)*W_(2,3)*Z_(1,1) ...
% %        + W_(3,2)*W_(1,1)*Z_(2,3) + W_(2,3)*W_(1,1)*Z_(3,2)*z ...
% %        + W_(3,2)*Z_(2,3)*Z_(1,1)*z^2 + W_(2,3)*Z_(3,2)*Z_(1,1)*z^2 ...
% %        + W_(1,1)*Z_(3,2)*Z_(2,3)*z^2 + Z_(3,2)*Z_(2,3)*Z_(1,1)*z^3;
% 
% 
% % F6 = W33*W21*W12 + W33*X21*X12*x^2 + W21*X33*X12*x^2 + W12*X33*X21*x^2 ... x
% %      + X33*X21*X12*x^3 + W33*Y21*Y12*y^2 + W21*Y33*Y12*y^2 ... x
% %      + W12*Y33*Y21*y^2 + Y33*Y21*Y12*y^3 + W33*Z21*Z12*z^2 ... x
% %      + W21*Z33*Z12*z^2 + W12*Z33*Z21*z^2 + Z33*Z21*Z12*z^3 ... x
% %      + W33*W21*X12*x + W33*W12*X21*x + W21*W12*X33*x + W33*W21*Y12*y ... x
% %      + W33*W12*Y21*y + W21*W12*Y33*y + W33*W21*Z12*z + W33*W12*Z21*z ... x
% %      + W21*W12*Z33*z + W33*X21*Y12*x*y + W33*X12*Y21*x*y ... x
% %      + W21*X33*Y12*x*y + W21*X12*Y33*x*y + W12*X33*Y21*x*y ... x
% %      + W12*X21*Y33*x*y + W33*X21*Z12*x*z + W33*X12*Z21*x*z ... x
% %      + W21*X33*Z12*x*z + W21*X12*Z33*x*z + W12*X33*Z21*x*z ... x
% %      + W12*X21*Z33*x*z + W33*Y21*Z12*y*z + W33*Y12*Z21*y*z ... x
% %      + W21*Y33*Z12*y*z + W21*Y12*Z33*y*z + W12*Y33*Z21*y*z ... x
% %      + W12*Y21*Z33*y*z + X33*X21*Y12*x^2*y + X33*X12*Y21*x^2*y ... x
% %      + X21*X12*Y33*x^2*y + X33*Y21*Y12*x*y^2 + X21*Y33*Y12*x*y^2 ... x
% %      + X12*Y33*Y21*x*y^2 + X33*X21*Z12*x^2*z + X33*X12*Z21*x^2*z ... x
% %      + X21*X12*Z33*x^2*z + X33*Z21*Z12*x*z^2 + X21*Z33*Z12*x*z^2 ... x
% %      + X12*Z33*Z21*x*z^2 + Y33*Y21*Z12*y^2*z + Y33*Y12*Z21*y^2*z ... x
% %      + Y21*Y12*Z33*y^2*z + Y33*Z21*Z12*y*z^2 + Y21*Z33*Z12*y*z^2 ... x
% %      + Y12*Z33*Z21*y*z^2 + X33*Y21*Z12*x*y*z + X33*Y12*Z21*x*y*z ... x 
% %      + X21*Y33*Z12*x*y*z + X21*Y12*Z33*x*y*z + X12*Y33*Z21*x*y*z ... x
% %      + X12*Y21*Z33*x*y*z    x
% 
% 
% F6_x3 = X_(3,3)*X_(2,1)*X_(1,2);
% F6_y3 = Y_(3,3)*Y_(2,1)*Y_(1,2);
% F6_x2y = X_(3,3)*X_(2,1)*Y_(1,2) + X_(3,3)*X_(1,2)*Y_(2,1) ...
%          + X_(2,1)*X_(1,2)*Y_(3,3);
% F6_xy2 = X_(3,3)*Y_(2,1)*Y_(1,2) + X_(2,1)*Y_(3,3)*Y_(1,2) ...
%          + X_(1,2)*Y_(3,3)*Y_(2,1);
% F6_x2z = X_(3,3)*X_(2,1)*Z_(1,2) + X_(3,3)*X_(1,2)*Z_(2,1) ...
%          + X_(2,1)*X_(1,2)*Z_(3,3);
% F6_x2 = W_(3,3)*X_(2,1)*X_(1,2) + W_(2,1)*X_(3,3)*X_(1,2) ...
%         + W_(1,2)*X_(3,3)*X_(2,1);
% F6_y2z = Y_(3,3)*Y_(2,1)*Z_(1,2) + Y_(3,3)*Y_(1,2)*Z_(2,1) ...
%          + Y_(2,1)*Y_(1,2)*Z_(3,3);
% F6_y2 = W_(3,3)*Y_(2,1)*Y_(1,2) + W_(2,1)*Y_(3,3)*Y_(1,2) ...
%         + W_(1,2)*Y_(3,3)*Y_(2,1);
% F6_xyz = X_(3,3)*Y_(2,1)*Z_(1,2) + X_(3,3)*Y_(1,2)*Z_(2,1) ...
%          + X_(2,1)*Y_(3,3)*Z_(1,2) + X_(2,1)*Y_(1,2)*Z_(3,3) ...
%          + X_(1,2)*Y_(3,3)*Z_(2,1) + X_(1,2)*Y_(2,1)*Z_(3,3);          
% F6_xy = W_(3,3)*X_(2,1)*Y_(1,2) + W_(3,3)*X_(1,2)*Y_(2,1) ...
%         + W_(2,1)*X_(3,3)*Y_(1,2) + W_(2,1)*X_(1,2)*Y_(3,3) ...
%         + W_(1,2)*X_(3,3)*Y_(2,1) + W_(1,2)*X_(2,1)*Y_(3,3);
% 
% % The polinomials of Z for F6
% % F6_x = W_(3,3)*W_(2,1)*X_(1,2) + W_(3,3)*W_(1,2)*X_(2,1) ...
% %         + W_(2,1)*W_(1,2)*X_(3,3) + W_(3,3)*X_(2,1)*Z_(1,2)*z ...
% %         + W_(3,3)*X_(1,2)*Z_(2,1)*z + W_(2,1)*X_(3,3)*Z_(1,2)*z ...
% %         + W_(2,1)*X_(1,2)*Z_(3,3)*z + W_(1,2)*X_(3,3)*Z_(2,1)*z ...
% %         + W_(1,2)*X_(2,1)*Z_(3,3)*z + X_(3,3)*Z_(2,1)*Z_(1,2)*z^2 ...
% %         + X_(2,1)*Z_(3,3)*Z_(1,2)*z^2 + + X_(1,2)*Z_(3,3)*Z_(2,1)*z^2;
% % F6_y = W_(3,3)*W_(2,1)*Y_(1,2) + W_(3,3)*W_(1,2)*Y_(2,1) ...
% %        + W_(2,1)*W_(1,2)*Y_(3,3) + W_(3,3)*Y_(2,1)*Z_(1,2)*z ...
% %        + W_(3,3)*Y_(1,2)*Z_(2,1)*z + W_(2,1)*Y_(3,3)*Z_(1,2)*z ...
% %        + W_(2,1)*Y_(1,2)*Z_(3,3)*z + W_(1,2)*Y_(3,3)*Z_(2,1)*z ...
% %        + W_(1,2)*Y_(2,1)*Z_(3,3)*z + Y_(3,3)*Z_(2,1)*Z_(1,2)*z^2 ...
% %        + Y_(2,1)*Z_(3,3)*Z_(1,2)*z^2 + Y_(1,2)*Z_(3,3)*Z_(2,1)*z^2;
% % F6_1 = W_(3,3)*W_(2,1)*W_(1,2) + W_(3,3)*W_(2,1)*Z_(1,2) ...
% %        + W_(3,3)*W_(1,2)*Z_(2,1) + W_(2,1)*W_(1,2)*Z_(3,3)*z ...
% %        + W_(3,3)*Z_(2,1)*Z_(1,2)*z^2 + W_(2,1)*Z_(3,3)*Z_(1,2)*z^2 ...
% %        + W_(1,2)*Z_(3,3)*Z_(2,1)*z^2 + Z_(3,3)*Z_(2,1)*Z_(1,2)*z^3;
% 
% end

